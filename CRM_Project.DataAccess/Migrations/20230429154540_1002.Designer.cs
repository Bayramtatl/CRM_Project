// <auto-generated />
using System;
using CRM_Project.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM_Project.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230429154540_1002")]
    partial class _1002
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM_Project.Core.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Kablonet",
                            Email = "k@k.com",
                            Password = "123",
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8558)
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Uludağ Üniversitesi",
                            Email = "u@u.com",
                            Password = "123",
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8559)
                        });
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Request = "Deneme için destek talebi",
                            ServiceStatus = 1,
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8572)
                        });
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.ServiceStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("ServiceSteps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sunucularımızda ısınma sorunu var.",
                            Point = 0,
                            ServiceId = 1,
                            ServiceType = 2,
                            StaffId = 2,
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8584)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sunuculara yazılım güncellemesi yapıldı.",
                            Point = 4,
                            ServiceId = 1,
                            ServiceType = 1,
                            StaffId = 1,
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8596)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sunucuların işlemcisi değiştirildi.",
                            Point = 5,
                            ServiceId = 1,
                            ServiceType = 0,
                            StaffId = 3,
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8597)
                        });
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AvgPoint")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "b@b.com",
                            Name = "Bayram",
                            Password = "123",
                            Role = 0,
                            Surname = "Tatlı",
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8478)
                        },
                        new
                        {
                            Id = 2,
                            Email = "b@c.com",
                            Name = "Firma",
                            Password = "123",
                            Role = 0,
                            Surname = "Talebi",
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8486)
                        },
                        new
                        {
                            Id = 3,
                            Email = "s@s.com",
                            Name = "Suat",
                            Password = "123",
                            Role = 1,
                            Surname = "Bıçakçı",
                            UpdatedDate = new DateTime(2023, 4, 29, 18, 45, 40, 93, DateTimeKind.Local).AddTicks(8488)
                        });
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.Service", b =>
                {
                    b.HasOne("CRM_Project.Core.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.ServiceStep", b =>
                {
                    b.HasOne("CRM_Project.Core.Entities.Service", "Service")
                        .WithMany("ServiceSteps")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_Project.Core.Entities.Staff", "Staff")
                        .WithMany("ServiceSteps")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.Service", b =>
                {
                    b.Navigation("ServiceSteps");
                });

            modelBuilder.Entity("CRM_Project.Core.Entities.Staff", b =>
                {
                    b.Navigation("ServiceSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
